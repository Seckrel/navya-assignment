services:
  server:
    container_name: server
    build:
      context: .
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - .:/app

    # The commented out section below is an example of how to define a PostgreSQL
    # database that your application can use. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts. The `db-password` secret is used
    # to set the database password. You must create `db/password.txt` and add
    # a password of your choosing to it before running `docker compose up`.
    depends_on:
      db:
        condition: service_healthy
  db:
    container_name: db
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - ./postgres:/var/lib/postgresql/data
    # environment:
    #   - POSTGRES_DB=navya
    #   - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    #   - 
    env_file:
      - .env

    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  postgres:
  server:
secrets:
  db-password:
    file: pgpass.txt
